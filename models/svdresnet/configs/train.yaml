device: "cpu"
num_epochs: 300
batch_size: 64
log_interval: 100
num_saved_model: 2

model:
    _target_: scripts.model.TSVDResNet
    num_classes: 10
    patch_size: 8
    compression_ratio: [1, 20]
    u_output_dim: 96
    vt_output_dim: 24

train_transform:
    _target_: torchvision.transforms.Compose
    transforms:
        - _target_: torchvision.transforms.RandomResizedCrop
          size: 224
        - _target_: torchvision.transforms.RandomHorizontalFlip
          p: 0.5
        - _target_: torchvision.transforms.ToTensor
        - _target_: torchvision.transforms.Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]

val_transform:
    _target_: torchvision.transforms.Compose
    transforms:
        - _target_: torchvision.transforms.Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
        - _target_: torchvision.transforms.ToTensor

train_set:
    _target_: torchvision.datasets.CIFAR10
    root: "."
    transform: ${train_transform}
    train: True
    download: True

val_set:
    _target_: torchvision.datasets.CIFAR10
    root: "."
    transform: ${val_transform}
    train: false
    download: True

train_loader:
    _target_: torch.utils.data.DataLoader
    dataset: ${train_set}
    batch_size: ${batch_size}
    shuffle: true

val_loader:
    _target_: torch.utils.data.DataLoader
    dataset: ${val_set}
    batch_size: ${2* batch_size}
    shuffle: true

optimizer:
    _target_: torch.optim.AdamW
    _partial_: true
    lr: 0.001
    weight_decay: 0.0

scheduler:
    _target_: torch.optim.lr_scheduler.CosineAnnealingLR
    _partial_: true
    T_max: ${num_epochs}

loss:
    _target_: torch.nn.CrossEntropyLoss

val_metrics:
    accuracy:
        _target_: ignite.metrics.Accuracy
    loss:
        _target_: ignite.metrics.Loss
        loss_fn: ${loss}
